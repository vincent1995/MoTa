#include<vector>
#include<fstream>
using namespace std;

//地图尺寸
#define X_MAPSIZE 10
#define Y_MAPSIZE 10
#define TOTAL_MAP 16
/////////////////////////////////////////////////////////////
//怪物信息
/////////////
/*
0 for block
1 for road
2 for monster1
3 for monster2
4 for up_floor
5 for down_floor
6 for yellowdoor
7 for bluedoor
8 for reddoor
9 for yellowkey
10 for bluekey
11 for redkey
12 for elixir(血瓶)
13 for sword（剑）
14 for shield（盾）
15 for store
16 for monster3
17 for monster4
18 for manster5  黑暗法师  无视防御
19 for manster6
20 for manster7
21 for manster8
22 for manster9(打完会中毒,打完后走5步之内会持续掉血)
23 for manster10
24 岩浆
97   仙女
96  不可进入的空地
98 可以打碎的墙
99  幻影
100   室友  胜利
101  作弊

*/ 
/////////////////////////////////////////////////////////////////////

//地图信息
const int map_file[TOTAL_MAP][X_MAPSIZE][Y_MAPSIZE]={

	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,4,1,1,1,1,9,10,11,0},
	{0,0,0,0,0,1,0,0,0,0},
	{0,0,0,0,0,97,0,0,0,0},
	{24,24,24,13,1,1,1,14,24,24},
	{24,24,24,24,24,1,24,24,24,24},
	{24,24,24,24,24,1,24,24,24,24},
	{24,24,24,24,24,1,24,24,24,24},
	{24,24,24,24,24,1,24,24,24,24},
	{24,24,24,24,24,1,24,24,24,24}
	}
	,
	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,5,1,1,1,1,1,1,4,0},
	{0,1,1,1,1,1,1,1,1,0},
	{0,1,0,0,0,0,0,0,1,0},
	{0,1,0,1,1,1,1,1,1,0},
	{0,1,0,0,0,0,0,0,1,0},
	{0,1,0,1,1,1,101,0,1,0},
	{0,1,0,98,0,0,0,0,1,0},
	{0,1,1,1,1,1,1,1,1,0},
	{0,0,0,0,0,0,0,0,0,0}
	}
	,
	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,4,1,1,99,1,1,1,5,0},
	{0,1,1,0,0,0,1,1,1,0},
	{0,1,0,1,1,1,0,1,1,0},
	{0,1,1,1,1,1,0,1,1,0},
	{0,1,1,1,1,0,1,1,1,0},
	{0,1,1,1,0,1,1,1,1,0},
	{0,1,1,0,1,1,1,1,1,0},
	{0,1,0,0,0,0,0,1,1,0},
	{0,0,0,0,0,0,0,0,0,0}
	},





	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,5,1,1,1,1,1,1,1,0},
	{0,1,1,0,0,0,0,1,1,0},
	{0,1,0,0,1,1,1,0,1,0},
	{0,1,0,1,0,1,1,0,1,0},
	{0,1,0,1,1,0,1,0,1,0},
	{0,1,0,1,1,1,0,0,1,0},
	{0,1,1,0,0,0,0,1,1,0},
	{0,1,1,1,1,1,1,1,4,0},
	{0,0,0,0,0,0,0,0,0,0}
	}
	,





	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,1,1,1,0,0,1,1,4,0},
	{0,1,0,1,0,0,1,0,1,0},
	{0,1,0,1,0,0,1,0,1,0},
	{0,1,0,0,0,0,0,0,1,0},
	{0,1,1,1,0,0,1,1,1,0},
	{0,1,0,1,0,0,1,0,1,0},
	{0,1,0,1,0,0,1,0,1,0},
	{0,1,0,0,0,0,0,0,5,0},
	{0,0,0,0,0,0,0,0,0,0}
	}
	,






	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,1,1,0,0,0,0,1,5,0},
	{0,1,1,0,1,1,0,1,1,0},
	{0,1,1,0,0,0,0,1,1,0},
	{0,1,1,1,1,1,1,1,1,0},
	{0,0,0,0,1,1,0,0,0,0},
	{0,0,1,0,1,1,0,1,0,0},
	{0,0,0,0,1,1,0,0,0,0},
	{0,4,1,1,1,1,1,1,1,0},
	{0,0,0,0,0,0,0,0,0,0}
	}
	,






	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,11,12,6,2,3,1,1,4,0},
	{0,0,0,0,0,1,0,0,0,0},
	{0,13,3,9,0,1,1,1,9,0},
	{0,1,3,2,7,1,1,1,9,0},
	{0,0,0,0,0,0,1,0,0,0},
	{0,12,2,2,6,1,6,2,3,0},
	{0,0,0,0,0,1,0,12,9,0},
	{0,5,1,1,1,1,0,9,10,0},
	{0,0,0,0,0,0,0,0,0,0}
	}

	,

	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,1,1,1,1,1,1,1,5,0},
	{0,1,0,0,0,0,0,0,0,0},
	{0,1,8,17,18,22,20,12,13,0},
	{0,2,0,17,18,98,11,12,1,0},
	{0,2,0,0,0,0,0,0,0,0},
	{0,2,1,1,1,1,1,1,12,0},
	{0,0,6,0,1,0,0,6,0,0},
	{0,12,18,0,4,0,17,9,10,0},
	{0,0,0,0,0,0,0,0,0,0}
	}



	,

	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,1,18,0,22,13,0,0,4,0},
	{0,0,17,0,1,0,0,1,1,0},
	{0,0,1,22,6,0,1,19,19,0},
	{0,0,1,0,1,0,22,0,0,0},
	{0,0,1,0,1,0,1,1,1,0},
	{0,0,1,0,1,0,18,18,1,0},
	{0,0,17,0,1,0,0,0,8,0},
	{0,12,18,0,5,98,12,13,14,0},
	{0,0,0,0,0,0,0,0,0,0}
	}


	,

	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,4,1,1,1,1,1,1,5,0},
	{0,0,0,0,8,0,0,0,0,0},
	{0,1,12,23,1,23,1,12,14,0},
	{0,12,21,1,1,1,1,21,12,0},
	{0,1,1,1,1,1,1,1,1,0},
	{0,1,1,1,1,1,1,1,1,0},
	{0,12,21,1,1,1,1,21,12,0},
	{0,13,12,1,1,1,1,12,13,0},
	{0,0,0,0,0,0,0,0,0,0}
	}


	,


	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,5,0,13,12,22,1,1,4,0},
	{0,1,0,0,0,0,1,0,0,0},
	{0,1,0,11,12,0,1,0,16,0},
	{0,1,0,21,22,0,1,0,16,0},
	{0,1,0,6,0,0,1,0,16,0},
	{0,1,3,1,1,1,1,1,1,0},
	{0,0,0,7,0,0,6,0,0,0},
	{0,14,9,20,0,9,18,9,9,0},
	{0,0,0,0,0,0,0,0,0,0}
	}



	,



	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,96,15,96,1,0,10,0,5,0},
	{0,1,1,1,1,0,17,0,1,0},
	{0,1,1,1,1,1,1,1,1,0},
	{0,0,0,0,0,0,1,0,0,0},
	{0,13,18,6,1,1,1,6,1,0},
	{0,12,19,0,0,0,22,0,16,0},
	{0,12,16,0,3,3,13,0,13,0},
	{0,4,1,0,9,12,1,0,12,0},
	{0,0,0,0,0,0,0,0,0,0}
	}


	,



	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,1,1,1,1,0,1,1,1,0},
	{0,1,0,0,1,0,1,0,1,0},
	{0,1,1,0,1,0,1,0,1,0},
	{0,0,3,0,1,0,1,0,1,0},
	{0,19,19,0,1,0,1,0,1,0},
	{0,4,2,0,1,1,1,0,1,0},
	{0,0,98,0,0,0,0,0,1,0},
	{0,5,1,1,1,1,1,1,1,0},
	{0,0,0,0,0,0,0,0,0,0}
	}


	,
	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,1,1,1,0,1,1,1,4,0},
	{0,13,1,23,0,1,0,0,0,0},
	{0,12,17,1,7,1,0,12,12,0},
	{0,12,1,23,0,1,0,20,16,0},
	{0,0,0,0,0,1,0,0,6,0},
	{0,5,1,1,1,1,1,1,1,0},
	{0,0,0,0,21,0,21,0,0,0},
	{0,9,13,12,17,0,1,12,10,0},
	{0,0,0,0,0,0,0,0,0,0}
	}


	,

	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,1,1,1,1,1,1,1,5,0},
	{0,1,0,0,0,8,0,0,0,0},
	{0,1,0,0,13,1,1,1,0,0},
	{0,1,0,13,1,1,1,1,1,0},
	{0,1,0,1,1,21,21,1,1,0},
	{0,1,0,1,1,21,21,1,1,0},
	{0,1,0,12,1,1,1,1,12,0},
	{0,4,0,0,12,1,1,12,0,0},
	{0,0,0,0,0,0,0,0,0,0}
	}

	,


	{
	{0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,100,0,0,0,0,0},
	{0,1,1,23,22,23,1,1,1,0},
	{0,0,98,0,22,0,0,0,8,0},
	{0,1,1,1,22,22,1,1,1,0},
	{0,12,0,0,22,0,0,0,0,0},
	{0,1,1,22,22,22,1,1,1,0},
	{0,0,0,0,22,0,0,0,12,0},
	{0,5,22,22,1,1,1,1,1,0},
	{0,0,0,0,0,0,0,0,0,0}
	}

};



//地图类
class map
{
public:
	vector<vector<int>> m;
	int x_mapsize,y_mapsize;
	int Map_Num;

	int GetMapPoint(int x,int y);
	void SetMapPoint(int x,int y,int value);
	map(int x,int y,int Num);
};
map::map(int x_size,int y_size,int Num)
{
	x_mapsize=x_size;
	y_mapsize=y_size;
	Map_Num=Num;
	for(int i=0;i<x_mapsize;i++)
		m.push_back(vector<int>(0));
	for(int i=0;i<x_mapsize;i++)
	{
		for(int j=0;j<y_mapsize;j++)
			m.at(i).push_back(map_file[Map_Num][i][j]);
	}
}
int map::GetMapPoint(int x,int y)
{
	return m[x][y];
}
void map::SetMapPoint(int x,int y,int value)
{
	m[x][y]=value;
}








//主角类
class player
{
public:
	int hp;
	int attack;
	int defence;
	int key[3];
	int Money;

	player();
	bool SetHp(int chagevalue);
	bool SetMoney(int changevalue);
	bool SetAttack(int changevalue);
	bool SetDefence(int chagevalue);
	bool SetKeyNum(int kind,int changevalue);
	int GetAttack();
	int GetDefence();
	int GetHp(){return hp;};
	int GetMoney(){return Money;};
	int GetKeyNum(int kind){return key[kind];};
};
player::player()
{

	hp=100;
	attack=5;
	defence=0;
	Money=0;
	for(int i=0;i<3;i++)
		key[i]=0;
}
bool player::SetHp(int changevalue)
{
	if(hp+changevalue<=0)
	{
		hp=0;
		return false;
	}
	else
	{
		hp+=changevalue;
		return true;
	}
}
bool player::SetMoney(int changevalue)
{
	if(Money+changevalue<0)
		return false;
	else
	{
		Money+=changevalue;
		return true;
	}
}
bool player::SetAttack(int changevalue)
{
	if(attack+changevalue<=0)
	{
		attack=0;
		return false;
	}
	else
	{
		attack+=changevalue;
		return true;
	}
}
bool player::SetDefence(int changevalue)
{
	if(defence+changevalue<0)
	{
		defence=0;
		return false;
	}
	else
	{
		defence+=changevalue;
		return true;
	}
}
bool player::SetKeyNum(int kind,int changevalue)
{
	if(key[kind]+changevalue<0)
	{
		return false;
	}
	else
	{
		key[kind]+=changevalue;
		return true;
	}
}
int player::GetAttack()
{
	return attack;
}
int player::GetDefence()
{
	return defence;
}
